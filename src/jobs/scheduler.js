const cron = require('node-cron');
const gerarCobrancasJob = require('./gerarCobrancasRecorrentes');

class JobScheduler {
  
  iniciar() {
    console.log('üìÖ [SCHEDULER] Iniciando agendamento de jobs...');

    // Executar todo dia √†s 00:00 (meia-noite)
    cron.schedule('0 0 * * *', async () => {
      console.log('‚è∞ [SCHEDULER] Executando job de cobran√ßas - ' + new Date().toISOString());
      
      try {
        await gerarCobrancasJob.executar();
      } catch (error) {
        console.error('‚ùå [SCHEDULER] Erro ao executar job:', error);
        // Aqui voc√™ pode enviar email/notifica√ß√£o de erro
      }
    }, {
      timezone: 'America/Sao_Paulo'
    });

    // Job para atualizar status de contas vencidas (√†s 01:00)
    cron.schedule('0 1 * * *', async () => {
      console.log('‚è∞ [SCHEDULER] Atualizando contas vencidas...');
      
      const contaReceberService = require('../services/contaReceberService');
      try {
        await contaReceberService.atualizarStatusVencidas();
      } catch (error) {
        console.error('‚ùå [SCHEDULER] Erro ao atualizar vencidas:', error);
      }
    }, {
      timezone: 'America/Sao_Paulo'
    });

    console.log('‚úÖ [SCHEDULER] Jobs agendados com sucesso!');
  }

  // M√©todo para executar job manualmente (√∫til para testes)
  async executarManualmente() {
    console.log('üîß [SCHEDULER] Execu√ß√£o manual do job...');
    return await gerarCobrancasJob.executar();
  }
}

module.exports = new JobScheduler();